// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package coursemanagement.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the CourseManagement module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Content_SaveBuilder(
		coursemanagement.proxies.Content _content,
		coursemanagement.proxies.Course _course
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.ACT_Content_Save");
		builder = builder.withParam("Content", _content);
		builder = builder.withParam("Course", _course);
		return builder;
	}

	public static void aCT_Content_Save(
		IContext context,
		coursemanagement.proxies.Content _content,
		coursemanagement.proxies.Course _course
	)
	{
		aCT_Content_SaveBuilder(
				_content,
				_course
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Course_DropOffBuilder(
		coursemanagement.proxies.Course _course
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.ACT_Course_DropOff");
		builder = builder.withParam("Course", _course);
		return builder;
	}

	public static void aCT_Course_DropOff(
		IContext context,
		coursemanagement.proxies.Course _course
	)
	{
		aCT_Course_DropOffBuilder(
				_course
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Course_SaveBuilder(
		coursemanagement.proxies.Course _course
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.ACT_Course_Save");
		builder = builder.withParam("Course", _course);
		return builder;
	}

	public static void aCT_Course_Save(
		IContext context,
		coursemanagement.proxies.Course _course
	)
	{
		aCT_Course_SaveBuilder(
				_course
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_CourseAssignement_SaveBuilder(
		coursemanagement.proxies.CourseAssignment _courseAssignment,
		coursemanagement.proxies.Course _course_2
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.ACT_CourseAssignement_Save");
		builder = builder.withParam("CourseAssignment", _courseAssignment);
		builder = builder.withParam("Course_2", _course_2);
		return builder;
	}

	public static void aCT_CourseAssignement_Save(
		IContext context,
		coursemanagement.proxies.CourseAssignment _courseAssignment,
		coursemanagement.proxies.Course _course_2
	)
	{
		aCT_CourseAssignement_SaveBuilder(
				_courseAssignment,
				_course_2
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_CourseImage_UploadBuilder(
		coursemanagement.proxies.CourseImage _courseImage,
		coursemanagement.proxies.Course _course
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.ACT_CourseImage_Upload");
		builder = builder.withParam("CourseImage", _courseImage);
		builder = builder.withParam("Course", _course);
		return builder;
	}

	public static void aCT_CourseImage_Upload(
		IContext context,
		coursemanagement.proxies.CourseImage _courseImage,
		coursemanagement.proxies.Course _course
	)
	{
		aCT_CourseImage_UploadBuilder(
				_courseImage,
				_course
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_CourseAssignement_RetrieveBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.DS_CourseAssignement_Retrieve");
		return builder;
	}

	public static java.util.List<coursemanagement.proxies.CourseAssignment> dS_CourseAssignement_Retrieve(IContext context)
	{
		Object result = dS_CourseAssignement_RetrieveBuilder().execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> coursemanagement.proxies.CourseAssignment.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_CourseAssignement_Retrieve_CurrentCourseBuilder(
		coursemanagement.proxies.Course _course
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.DS_CourseAssignement_Retrieve_CurrentCourse");
		builder = builder.withParam("Course", _course);
		return builder;
	}

	public static coursemanagement.proxies.CourseAssignment dS_CourseAssignement_Retrieve_CurrentCourse(
		IContext context,
		coursemanagement.proxies.Course _course
	)
	{
		Object result = dS_CourseAssignement_Retrieve_CurrentCourseBuilder(
				_course
			)
			.execute(context);
		return result == null ? null : coursemanagement.proxies.CourseAssignment.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_User_RetrieveForAssignBuilder(
		coursemanagement.proxies.CourseAssignment _courseAssignment
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.DS_User_RetrieveForAssign");
		builder = builder.withParam("CourseAssignment", _courseAssignment);
		return builder;
	}

	public static java.util.List<usermanagement.proxies.User> dS_User_RetrieveForAssign(
		IContext context,
		coursemanagement.proxies.CourseAssignment _courseAssignment
	)
	{
		Object result = dS_User_RetrieveForAssignBuilder(
				_courseAssignment
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> usermanagement.proxies.User.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder tETETETEBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.TETETETE");
		return builder;
	}

	public static java.util.List<coursemanagement.proxies.CourseAssignment> tETETETE(IContext context)
	{
		Object result = tETETETEBuilder().execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> coursemanagement.proxies.CourseAssignment.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_Content_FieldValidationBuilder(
		coursemanagement.proxies.Content _content
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.VAL_Content_FieldValidation");
		builder = builder.withParam("Content", _content);
		return builder;
	}

	public static boolean vAL_Content_FieldValidation(
		IContext context,
		coursemanagement.proxies.Content _content
	)
	{
		Object result = vAL_Content_FieldValidationBuilder(
				_content
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_Course_FieldValidationBuilder(
		coursemanagement.proxies.Course _course
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseManagement.VAL_Course_FieldValidation");
		builder = builder.withParam("Course", _course);
		return builder;
	}

	public static boolean vAL_Course_FieldValidation(
		IContext context,
		coursemanagement.proxies.Course _course
	)
	{
		Object result = vAL_Course_FieldValidationBuilder(
				_course
			)
			.execute(context);
		return (boolean) result;
	}
}
