// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package coursemanagement.proxies;

public class CourseUrl implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject courseUrlMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "CourseManagement.CourseUrl";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CourseUrl("CourseUrl"),
		CourseUrl_CourseAssignment("CourseManagement.CourseUrl_CourseAssignment");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CourseUrl(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected CourseUrl(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject courseUrlMendixObject)
	{
		if (courseUrlMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, courseUrlMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.courseUrlMendixObject = courseUrlMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static coursemanagement.proxies.CourseUrl initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new coursemanagement.proxies.CourseUrl(context, mendixObject);
	}

	public static coursemanagement.proxies.CourseUrl load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return coursemanagement.proxies.CourseUrl.initialize(context, mendixObject);
	}

	/**
	 * @return value of CourseUrl
	 */
	public final java.lang.String getCourseUrl()
	{
		return getCourseUrl(getContext());
	}

	/**
	 * @param context
	 * @return value of CourseUrl
	 */
	public final java.lang.String getCourseUrl(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CourseUrl.toString());
	}

	/**
	 * Set value of CourseUrl
	 * @param courseurl
	 */
	public final void setCourseUrl(java.lang.String courseurl)
	{
		setCourseUrl(getContext(), courseurl);
	}

	/**
	 * Set value of CourseUrl
	 * @param context
	 * @param courseurl
	 */
	public final void setCourseUrl(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String courseurl)
	{
		getMendixObject().setValue(context, MemberNames.CourseUrl.toString(), courseurl);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of CourseUrl_CourseAssignment
	 */
	public final coursemanagement.proxies.CourseAssignment getCourseUrl_CourseAssignment() throws com.mendix.core.CoreException
	{
		return getCourseUrl_CourseAssignment(getContext());
	}

	/**
	 * @param context
	 * @return value of CourseUrl_CourseAssignment
	 * @throws com.mendix.core.CoreException
	 */
	public final coursemanagement.proxies.CourseAssignment getCourseUrl_CourseAssignment(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		coursemanagement.proxies.CourseAssignment result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CourseUrl_CourseAssignment.toString());
		if (identifier != null) {
			result = coursemanagement.proxies.CourseAssignment.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of CourseUrl_CourseAssignment
	 * @param courseurl_courseassignment
	 */
	public final void setCourseUrl_CourseAssignment(coursemanagement.proxies.CourseAssignment courseurl_courseassignment)
	{
		setCourseUrl_CourseAssignment(getContext(), courseurl_courseassignment);
	}

	/**
	 * Set value of CourseUrl_CourseAssignment
	 * @param context
	 * @param courseurl_courseassignment
	 */
	public final void setCourseUrl_CourseAssignment(com.mendix.systemwideinterfaces.core.IContext context, coursemanagement.proxies.CourseAssignment courseurl_courseassignment)
	{
		if (courseurl_courseassignment == null) {
			getMendixObject().setValue(context, MemberNames.CourseUrl_CourseAssignment.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.CourseUrl_CourseAssignment.toString(), courseurl_courseassignment.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return courseUrlMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final coursemanagement.proxies.CourseUrl that = (coursemanagement.proxies.CourseUrl) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
