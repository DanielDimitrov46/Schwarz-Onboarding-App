// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package courseimportmidstage.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the CourseImportMidStage module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ContentMidPhase_CreateBuilder(
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseImportMidStage.ACT_ContentMidPhase_Create");
		builder = builder.withParam("CourseMidPhase", _courseMidPhase);
		return builder;
	}

	public static void aCT_ContentMidPhase_Create(
		IContext context,
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		aCT_ContentMidPhase_CreateBuilder(
				_courseMidPhase
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ContentMidPhase_SaveBuilder(
		courseimportmidstage.proxies.ContentMidPhase _contentMidPhase
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseImportMidStage.ACT_ContentMidPhase_Save");
		builder = builder.withParam("ContentMidPhase", _contentMidPhase);
		return builder;
	}

	public static void aCT_ContentMidPhase_Save(
		IContext context,
		courseimportmidstage.proxies.ContentMidPhase _contentMidPhase
	)
	{
		aCT_ContentMidPhase_SaveBuilder(
				_contentMidPhase
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Course_CreateCourseBuilder(
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseImportMidStage.ACT_Course_CreateCourse");
		builder = builder.withParam("CourseMidPhase", _courseMidPhase);
		return builder;
	}

	public static void aCT_Course_CreateCourse(
		IContext context,
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		aCT_Course_CreateCourseBuilder(
				_courseMidPhase
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_CourseMidPhase_Course_ImportBuilder(
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseImportMidStage.ACT_CourseMidPhase_Course_Import");
		builder = builder.withParam("CourseMidPhase", _courseMidPhase);
		return builder;
	}

	public static void aCT_CourseMidPhase_Course_Import(
		IContext context,
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		aCT_CourseMidPhase_Course_ImportBuilder(
				_courseMidPhase
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_CourseMidPhaseImage_CreateBuilder(
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseImportMidStage.ACT_CourseMidPhaseImage_Create");
		builder = builder.withParam("CourseMidPhase", _courseMidPhase);
		return builder;
	}

	public static void aCT_CourseMidPhaseImage_Create(
		IContext context,
		courseimportmidstage.proxies.CourseMidPhase _courseMidPhase
	)
	{
		aCT_CourseMidPhaseImage_CreateBuilder(
				_courseMidPhase
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_CourseMidPhaseImage_SaveBuilder(
		courseimportmidstage.proxies.CourseMidPhaseImage _courseMidPhaseImage
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("CourseImportMidStage.ACT_CourseMidPhaseImage_Save");
		builder = builder.withParam("CourseMidPhaseImage", _courseMidPhaseImage);
		return builder;
	}

	public static void aCT_CourseMidPhaseImage_Save(
		IContext context,
		courseimportmidstage.proxies.CourseMidPhaseImage _courseMidPhaseImage
	)
	{
		aCT_CourseMidPhaseImage_SaveBuilder(
				_courseMidPhaseImage
			)
			.execute(context);
	}
}
