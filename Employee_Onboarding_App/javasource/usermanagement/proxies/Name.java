// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package usermanagement.proxies;

public class Name implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject nameMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "UserManagement.Name";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Official("Official"),
		Common("Common"),
		Name_Root("UserManagement.Name_Root"),
		NativeName_Name("UserManagement.NativeName_Name"),
		Name_JsonObject("UserManagement.Name_JsonObject"),
		Name_User("UserManagement.Name_User");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Name(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Name(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject nameMendixObject)
	{
		if (nameMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, nameMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.nameMendixObject = nameMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static usermanagement.proxies.Name initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new usermanagement.proxies.Name(context, mendixObject);
	}

	public static usermanagement.proxies.Name load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return usermanagement.proxies.Name.initialize(context, mendixObject);
	}

	/**
	 * @return value of Official
	 */
	public final java.lang.String getOfficial()
	{
		return getOfficial(getContext());
	}

	/**
	 * @param context
	 * @return value of Official
	 */
	public final java.lang.String getOfficial(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Official.toString());
	}

	/**
	 * Set value of Official
	 * @param official
	 */
	public final void setOfficial(java.lang.String official)
	{
		setOfficial(getContext(), official);
	}

	/**
	 * Set value of Official
	 * @param context
	 * @param official
	 */
	public final void setOfficial(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String official)
	{
		getMendixObject().setValue(context, MemberNames.Official.toString(), official);
	}

	/**
	 * @return value of Common
	 */
	public final java.lang.String getCommon()
	{
		return getCommon(getContext());
	}

	/**
	 * @param context
	 * @return value of Common
	 */
	public final java.lang.String getCommon(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Common.toString());
	}

	/**
	 * Set value of Common
	 * @param common
	 */
	public final void setCommon(java.lang.String common)
	{
		setCommon(getContext(), common);
	}

	/**
	 * Set value of Common
	 * @param context
	 * @param common
	 */
	public final void setCommon(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String common)
	{
		getMendixObject().setValue(context, MemberNames.Common.toString(), common);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Name_Root
	 */
	public final usermanagement.proxies.Root getName_Root() throws com.mendix.core.CoreException
	{
		return getName_Root(getContext());
	}

	/**
	 * @param context
	 * @return value of Name_Root
	 * @throws com.mendix.core.CoreException
	 */
	public final usermanagement.proxies.Root getName_Root(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		usermanagement.proxies.Root result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Name_Root.toString());
		if (identifier != null) {
			result = usermanagement.proxies.Root.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Name_Root
	 * @param name_root
	 */
	public final void setName_Root(usermanagement.proxies.Root name_root)
	{
		setName_Root(getContext(), name_root);
	}

	/**
	 * Set value of Name_Root
	 * @param context
	 * @param name_root
	 */
	public final void setName_Root(com.mendix.systemwideinterfaces.core.IContext context, usermanagement.proxies.Root name_root)
	{
		if (name_root == null) {
			getMendixObject().setValue(context, MemberNames.Name_Root.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Name_Root.toString(), name_root.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of NativeName_Name
	 */
	public final usermanagement.proxies.NativeName getNativeName_Name() throws com.mendix.core.CoreException
	{
		return getNativeName_Name(getContext());
	}

	/**
	 * @param context
	 * @return value of NativeName_Name
	 * @throws com.mendix.core.CoreException
	 */
	public final usermanagement.proxies.NativeName getNativeName_Name(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		usermanagement.proxies.NativeName result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.NativeName_Name.toString());
		if (identifier != null) {
			result = usermanagement.proxies.NativeName.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of NativeName_Name
	 * @param nativename_name
	 */
	public final void setNativeName_Name(usermanagement.proxies.NativeName nativename_name)
	{
		setNativeName_Name(getContext(), nativename_name);
	}

	/**
	 * Set value of NativeName_Name
	 * @param context
	 * @param nativename_name
	 */
	public final void setNativeName_Name(com.mendix.systemwideinterfaces.core.IContext context, usermanagement.proxies.NativeName nativename_name)
	{
		if (nativename_name == null) {
			getMendixObject().setValue(context, MemberNames.NativeName_Name.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.NativeName_Name.toString(), nativename_name.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Name_JsonObject
	 */
	public final usermanagement.proxies.JsonObject getName_JsonObject() throws com.mendix.core.CoreException
	{
		return getName_JsonObject(getContext());
	}

	/**
	 * @param context
	 * @return value of Name_JsonObject
	 * @throws com.mendix.core.CoreException
	 */
	public final usermanagement.proxies.JsonObject getName_JsonObject(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		usermanagement.proxies.JsonObject result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Name_JsonObject.toString());
		if (identifier != null) {
			result = usermanagement.proxies.JsonObject.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Name_JsonObject
	 * @param name_jsonobject
	 */
	public final void setName_JsonObject(usermanagement.proxies.JsonObject name_jsonobject)
	{
		setName_JsonObject(getContext(), name_jsonobject);
	}

	/**
	 * Set value of Name_JsonObject
	 * @param context
	 * @param name_jsonobject
	 */
	public final void setName_JsonObject(com.mendix.systemwideinterfaces.core.IContext context, usermanagement.proxies.JsonObject name_jsonobject)
	{
		if (name_jsonobject == null) {
			getMendixObject().setValue(context, MemberNames.Name_JsonObject.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Name_JsonObject.toString(), name_jsonobject.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Name_User
	 */
	public final usermanagement.proxies.User getName_User() throws com.mendix.core.CoreException
	{
		return getName_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Name_User
	 * @throws com.mendix.core.CoreException
	 */
	public final usermanagement.proxies.User getName_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		usermanagement.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Name_User.toString());
		if (identifier != null) {
			result = usermanagement.proxies.User.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Name_User
	 * @param name_user
	 */
	public final void setName_User(usermanagement.proxies.User name_user)
	{
		setName_User(getContext(), name_user);
	}

	/**
	 * Set value of Name_User
	 * @param context
	 * @param name_user
	 */
	public final void setName_User(com.mendix.systemwideinterfaces.core.IContext context, usermanagement.proxies.User name_user)
	{
		if (name_user == null) {
			getMendixObject().setValue(context, MemberNames.Name_User.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Name_User.toString(), name_user.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return nameMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final usermanagement.proxies.Name that = (usermanagement.proxies.Name) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
